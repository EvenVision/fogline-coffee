{% comment %} Locations Assets {% endcomment %}
<link rel="preload" href="{{ 'section-locations.css' | asset_url }}" as="style" onload="this.onload=null;this.rel='stylesheet'">
<noscript><link rel="stylesheet" href="{{ 'section-locations.css' | asset_url }}"></noscript>

{% comment %} Locations Logic {% endcomment %}
{%- liquid
  if section.settings.full_width
    assign full_width =  'edge'
  endif

  assign section_padding = ''
  if section.settings.section_padding == 'top'
    assign section_padding = 'pb0'
  elsif section.settings.section_padding == 'bottom'
    assign section_padding = 'mt0'
  elsif section.settings.section_padding == 'none'
    assign section_padding = 'mt0 pb0'
  endif

  if section.settings.item_position == 'left'
    assign position_one = 'first'
    assign position_two = 'last'
  elsif section.settings.item_position == 'right'
    assign position_one = 'last'
    assign position_two = 'first'
  elsif section.settings.item_position == 'center'
    assign position_one = 'a-center'
    assign position_two = 'a-center'
  endif

  assign sm_render = '100vw'

  if section.settings.item_width == 'one_third' or section.settings.item_width == '33'
    assign width_one = 'span-8'
    assign width_two = 'span-4'
    assign md_render = 'calc(100vw / 3)'
    assign lg_render = 'calc(1600px / 3)'
    assign width = '800'
  elsif section.settings.item_width == 'one_half' or section.settings.item_width == '50'
    assign width_one = 'span-6'
    assign width_two = 'span-6'
    assign md_render = 'calc(100vw / 2)'
    assign lg_render = 'calc(1600px / 2)'
    assign width = '1000'
  elsif section.settings.item_width == 'two_thirds' or section.settings.item_width == '66'
    assign md_render = 'calc(100vw * 0.6667)'
    assign lg_render = 'calc(1600px * 0.6667)'
    assign width_one = 'span-4'
    assign width_two = 'span-8'
    assign width = '1200'
  elsif section.settings.item_width == 'three_quarters' or section.settings.item_width == '75'
    assign md_render = 'calc(100vw * 0.75)'
    assign lg_render = 'calc(1600px * 0.75)'
    assign width_one = 'span-9'
    assign width_two = 'span-3'
    assign width = '1200'
  elsif section.settings.item_width == 'one_whole' or section.settings.item_width == '100'
    assign md_render = '100vw'
    assign lg_render = '100vw'
    assign width_one = 'span-8 push-2'
    assign width_two = 'span-8 push-2'
    assign width = '2000'
  endif

  assign is_fixed_height = false
  if section.settings.image_height == 'fixed'
    assign is_fixed_height = true
    assign desktop_height = section.settings.desktop_height | append: 'px'
    assign mobile_height = section.settings.mobile_height | append: 'px'
  endif

-%}

{% capture carousel_config %}{
  "wrapAround":true,
  "dragThreshold":"15",
  "pauseAutoPlayOnHover":false,
  "pageDots": false,
  "prevNextButtons":true,
  "arrowShape": "M 10,50 L 60,100 L 70,90 L 30,50  L 70,10 L 60,0 Z"
}{% endcapture %}

{% style %}
#shopify-section-{{ section.id }} {
  --desktop-section-height: {{ desktop_height }};
  --mobile-section-height: {{ mobile_height }};
}
{% endstyle %}

{% comment %} Locations Template {% endcomment %}
<div
 class="global__section section-featured-locations featured-locations-{{ section.id }} {{ section_padding }}"
 data-section-id="{{ section.id }}"
 data-section-type="carousel"
 data-section-loaded="false"
 data-asset-url="{{ 'carousel.js' | asset_url }}">

  <div class="grid__wrapper {{ full_width }}">

    <article class="{{ width_two }} {{ position_one }}">
      <div class="slider-container">
        <div class="main-carousel v-center js-carousel relative" data-flickity='{{ carousel_config }}'>
          {% if section.blocks.size > 0 %}
              {% for block in section.blocks %}
                <div
                  class="carousel-cell location--carousel_image{% if is_fixed_height %} is--fixed{% endif %} slide-{{ block.id }}"
                  data-block-id="{{ block.id }}" data-slide-index="{{ forloop.index0 }}" {{ block.shopify_attributes }}>

                  {% if block.settings.location_image == blank %}
                    <div class="placeholder-image demo-1 color-2">
                      {% capture current %}{% cycle 1, 2, 3 %}{% endcapture %}
                      {% assign placeholder = 'collection-' | append: current %}
                      {{ placeholder | placeholder_svg_tag: 'placeholder-svg' }}
                    </div>
                  {% else %}
                    {% render 'helper-image',
                       type: block.settings.location_image,
                       sm_render: sm_render
                       md_render: md_render,
                       lg_render: lg_render,
                       width: width %}
                  {% endif %}

                </div>
              {% endfor %}
          {% endif %}
        </div>
      </div>
    </article>
    <article class="{{ width_one }} {{ position_two }} a-left v-center">
      <div class="text-with-image pl8 pr8 sm-pl0">
        <h3 class="animate--text">{{ section.settings.title }}</h3>
        <ul class="locations">
          {% for block in section.blocks %}
            <li class="location-name animate--text delay--{{ forloop.index }}" {{ block.shopify_attributes }}>
              {% if block.settings.location_name != blank %}
                <a class="relative" href="{{ block.settings.location_link }}">
                  {{ block.settings.location_name }}
                  {% render 'snip-icons',
                  type: 'theme',
                  icon: 'right-arrow',
                  classes:'sm m0 absolute r0',
                  fill: 'var(--text-color)',
                  hover: 'var(--text-color)' %}
                </a>
              {% endif %}
            </li>
          {% endfor %}
        </ul>
      </div>
    </article>

  </div>
</div>

{% schema %}
{
  "name": "Locations",
  "tag": "section",
  "class": "dynamic-section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Our Locations"
    },
    {
      "type": "select",
      "id": "item_position",
      "label": "Choose image position",
      "default": "left",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "right", "label": "Right" }
      ]
     },
    {
      "type": "select",
      "id": "item_width",
      "label": "Choose image width",
      "options": [
        { "value": "one_third", "label": "33%" },
        { "value": "one_half", "label": "50%" },
        { "value": "two_thirds", "label": "75%" },
        { "value": "one_whole", "label": "100%" }
      ],
      "default": "one_half"
    },
    {
      "type": "radio",
      "id": "image_height",
      "label": "Image height",
      "default":"natural",
      "options": [
        {
          "value": "natural",
          "label": "Natural"
        },
        {
          "value": "fixed",
          "label": "Fixed height"
        }
      ]
    },
    {
      "type": "range",
      "id": "desktop_height",
      "min": 200,
      "max": 1000,
      "step": 50,
      "unit": "px",
      "label": "Desktop fixed height",
      "default": 650
    },
    {
      "type": "range",
      "id": "mobile_height",
      "min": 200,
      "max": 800,
      "step": 50,
      "unit": "px",
      "label": "Mobile fixed height",
      "default": 400
    },
    {
      "type": "select",
      "id": "section_padding",
      "label": "Section spacing",
      "options": [
        {
          "value": "top",
          "label": "Top"
        },
        {
          "value": "bottom",
          "label": "Bottom"
        },
        {
          "value": "both",
          "label": "Both"
        },
        {
          "value": "none",
          "label": "None"
        }
      ],
      "default": "both"
    }
  ],
  "blocks":[
    {
      "type":"location",
      "name":"Location",
      "settings":[
        {
          "type": "image_picker",
          "id": "location_image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "location_name",
          "label": "Location name",
          "default": "California"
        },
        {
          "type": "url",
          "id": "location_link",
          "label": "Location link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Locations",
      "blocks": [
        {
          "type": "location"
        },
        {
          "type": "location"
        },
        {
          "type": "location"
        }
      ]
    }
  ],
  "templates": ["404", "article", "blog", "cart", "collection", "list-collections", "index", "page", "product", "search"]
}
{% endschema %}
